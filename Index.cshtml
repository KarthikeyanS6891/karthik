
@{
    ViewBag.Title = "Mapping PDF fields with XML Nodes";
}

<h2>Map Fields with Xml Nodes</h2>

<style>
    #selectablePDF .ui-selecting {
        background: #FECA40;
    }

    #selectablePDF .ui-selected {
        background: #F39814;
        color: white;
    }

    #selectablePDF {
        list-style-type: none;
        margin: 0;
        padding: 0;
        width: 60%;
    }

        #selectablePDF li {
            margin: 3px;
            padding: 0.4em;
            font-size: 1.4em;
            height: 35px;
        }

    #selectableXML .ui-selecting {
        background: #FECA40;
    }

    #selectableXML .ui-selected {
        background: #F39814;
        color: white;
    }

    #selectableXML {
        list-style-type: none;
        margin: 0;
        padding: 0;
        width: 60%;
    }

        #selectableXML li {
            margin: 3px;
            padding: 0.4em;
            font-size: 1.4em;
            height: 35px;
        }

    .selectedLi {
        background-color: #dd4814;
    }

    .draggable {
        background: transparent;
    }

    .droppable {
        height: 30px;
        width: 70% !important;
        background: #c1c1c1;
        margin: 5px;
        display: inline-block;
        border-color: #357ebd;
        border-radius: 5px;
    }

    ul {
        list-style-type: none;
    }

    li {
        list-style-type: none;
    }
</style>

<div class="row">
    <div class="col-md-12">
        <div class="col-md-3">
            <div class="panel panel-primary">
                <div class="panel-heading panel-head">PDF Fields</div>
                <div class="panel-body" style="height:475px;overflow-y:auto;">
                    @foreach (var item in ViewBag.TextFound)
                    {
                        <div class="row">
                            <div class="col-lg-1"></div>
                            <div class="draggable col-lg-10" style="cursor:pointer;border: 1px solid #ccc;border-radius:5px;">
                                @item
                            </div>
                        </div>
                        <br />
                    }
                </div>
            </div>
        </div>
        <div class="col-md-9">
            <div class="panel panel-primary">
                <div class="panel-heading panel-head">XML Nodes</div>
                <div class="panel-body" style="height:475px;width:100%;overflow:auto;">
                    <div id="formView">
                        <textarea id="textarea" style="display:none">
                            @ViewBag.data
                        </textarea>
                    </div>

                    <div id="treeView">
                        <ul>
                            <li></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $('#formView').hide();
            $('#treeView').show();
            var tree = $.parseXML($('#textarea').val());
            traverse($('#treeView li'), tree.firstChild)
            $('<b style="cursor:default;" class="pull-left"> – <\/b>').prependTo('#treeView li:has(ul)').click(function () {
                var sign = $(this).text()
                if (sign == " – ")
                    $(this).text(' + ').next().children().hide()
                else
                    $(this).text(' – ').next().children().show()
            });


            function traverse(node, tree) {
                var children = $(tree).children()
                if (!children.length > 0) {
                    node.append('<div class="row"><div class="col-lg-3">' + tree.nodeName + '<\/div><div class="col-lg-9 droppable"></div></div>')
                } else {
                    node.append(tree.nodeName)
                }
                if (children.length) {
                    var ul = $("<ul>").appendTo(node)
                    children.each(function () {
                        var li = $("<li>").appendTo(ul)
                        traverse(li, this)
                    })
                } else {
                    $('<ul><li>' + '</li><\/ul>').appendTo(node)
                }
            }

            $('.draggable').draggable({
                revert: "invalid",
                stack: ".draggable",
                helper: 'clone'
            });
            $('.droppable').droppable({
                accept: ".draggable",
                drop: function (event, ui) {
                    var droppable = $(this).addClass('col-lg-3');
                    var draggable = ui.draggable;
                    var drag = $('.droppable').has(ui.draggable).length ? draggable : draggable.clone().draggable({
                        revert: "invalid",
                        stack: ".draggable",
                        helper: 'clone'
                    });
                    drag.appendTo(droppable);
                    draggable.css({
                        float: 'left'
                    });
                }
            });
        });



    </script>
}